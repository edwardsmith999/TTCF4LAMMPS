processors 1 1 1

#Basic simulation setup
units		    lj
dimension	    3
atom_style      full 
neigh_modify	delay 0 every 1
boundary		p f p

include ./sim_params.lmp

timestep ${Integration_step}

variable    frac  equal 1-${rho_f}/${rho_w} 

variable rlatt equal (4.0/${rho_w})^(1.0/3)

variable totlayers equal ceil(2*${chwidth}/${rlatt})+2*${wlayers}

variable    Lx equal ceil(${L}/${rlatt})
variable    Lz equal ceil(${L}/${rlatt})
variable    Ly equal (${totlayers}-1)/2
variable    outbuff equal 2
variable    Kstiff equal 0.5*${Kspring}

variable	ymin equal -${outbuff}
variable	ymax equal ${Ly}+${outbuff}

variable lowwall equal -1.0/4
variable wallwidth equal (${wlayers}-1.0)/2+1.0/2
variable upwall equal ${Ly}+1.0/4
variable lowinterface equal ${lowwall}+${wallwidth}
variable upinterface equal ${upwall}-${wallwidth}

variable lowlayer equal ${lowinterface}-1.0/2
variable uplayer  equal ${upinterface}+1.0/2



variable rlowinterface equal (${lowinterface})*${rlatt}
variable rupinterface equal (${upinterface})*${rlatt}



variable vwall equal 0.5*${srate}*(${upinterface}-${lowinterface}+1.0/2)*${rlatt}

pair_style      lj/cut ${rc}
bond_style      harmonic

bond_coeff       1 ${Kstiff} 0.0

if "${map}==2" then &
"variable        vx atom -vx" &
"variable        vy atom -vy" &
"variable        vz atom -vz" &
"velocity        all set v_vx v_vy v_vz" 

if "${map}==3" then &
"variable        vx atom -vx" &
"variable        vy atom vy" &
"variable        vz atom vz" &
"variable        px atom xhi-x" &
"velocity        all set v_vx v_vy v_vz" &
"set             atom * x v_px" 

if "${map}==4" then & 
"variable        vx atom vx" &
"variable        vy atom -vy" &
"variable        vz atom -vz" &
"variable        px atom xhi-x" &
"velocity        all set v_vx v_vy v_vz" &
"set             atom * x v_px" 

region  lowinnerlayer block INF INF ${lowlayer} ${lowinterface} INF INF units lattice
region  upinnerlayer block INF INF ${upinterface} ${uplayer} INF INF units lattice




group lower type 2
group upper type 3

group		    wall union lower upper

group		    lowertherm type 2
group		    uppertherm type 3
group           nottherm subtract all lowertherm uppertherm

#Create a set of tethering sites (as molecules)
group		    lowersites type 4
group		    uppersites type 5
group		    sites union lowersites uppersites

group		    wallandsites_lower union lowersites lower
group		    wallandsites_upper union uppersites upper
group		    wallandsites union sites wall

velocity	    uppersites set ${vwall} 0.0 0.0 units box
velocity	    lowersites set -${vwall} 0.0 0.0 units box

group           flow type 1
group           sys  union flow wall


compute		    temperatureupper uppertherm temp/partial 0 1 1
compute		    temperaturelower lowertherm temp/partial 0 1 1


group           innerlowlayer dynamic lowertherm region lowinnerlayer every 2500
group           inneruplayer  dynamic uppertherm region upinnerlayer  every 2500



#variable nup equal count(inneruplayer)
#variable nlow equal count(innerlowlayer)

#variable nnup equal count(lower)
#variable nnlow equal count(upper)

#variable rupinterface equal   xcm(inneruplayer,y)-0.5
#variable rlowinterface equal  xcm(innerlowlayer,y)+0.5

fix             1 flow nve

fix             2 uppertherm nvt temp $T $T ${Thermo_damp}
fix             3 lowertherm nvt temp $T $T ${Thermo_damp}
fix_modify      2 temp temperatureupper
fix_modify      3 temp temperaturelower

fix		        4 uppersites setforce 0.0 0.0 0.0
fix		        5 lowersites setforce 0.0 0.0 0.0
fix             6 uppersites nve
fix             7 lowersites nve 


include ./slab.lmp
include ./vel.lmp
include ./force.lmp


run	           ${Child_sim}

